<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lakebin.blog.mapper.PostMapper">
  <resultMap id="BaseResultMap" type="com.lakebin.blog.entity.Post">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="blog_id" jdbcType="INTEGER" property="blogId" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="create_on" jdbcType="TIMESTAMP" property="createOn" />
    <result column="section" jdbcType="VARCHAR" property="section" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="visit" jdbcType="INTEGER" property="visit" />
    <collection property="comments" column="id" select="com.lakebin.blog.mapper.CommentMapper.selectByPost"/>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lakebin.blog.entity.PostWithBLOBs">
    <result column="draft" jdbcType="LONGVARCHAR" property="draft" />
    <result column="body" jdbcType="LONGVARCHAR" property="body" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, blog_id, author_id, create_on, section, subject, visit
  </sql>
  <sql id="Blob_Column_List">
    draft, body
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.lakebin.blog.entity.PostExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.lakebin.blog.entity.PostExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from post
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from post
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lakebin.blog.entity.PostExample">
    delete from post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lakebin.blog.entity.PostWithBLOBs">
    insert into post (id, blog_id, author_id, 
      create_on, section, subject, 
      visit, draft, body
      )
    values (#{id,jdbcType=INTEGER}, #{blogId,jdbcType=INTEGER}, #{authorId,jdbcType=INTEGER}, 
      #{createOn,jdbcType=TIMESTAMP}, #{section,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, 
      #{visit,jdbcType=INTEGER}, #{draft,jdbcType=LONGVARCHAR}, #{body,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lakebin.blog.entity.PostWithBLOBs">
    insert into post
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="createOn != null">
        create_on,
      </if>
      <if test="section != null">
        section,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="visit != null">
        visit,
      </if>
      <if test="draft != null">
        draft,
      </if>
      <if test="body != null">
        body,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="blogId != null">
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="createOn != null">
        #{createOn,jdbcType=TIMESTAMP},
      </if>
      <if test="section != null">
        #{section,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="visit != null">
        #{visit,jdbcType=INTEGER},
      </if>
      <if test="draft != null">
        #{draft,jdbcType=LONGVARCHAR},
      </if>
      <if test="body != null">
        #{body,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lakebin.blog.entity.PostExample" resultType="java.lang.Long">
    select count(*) from post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update post
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.blogId != null">
        blog_id = #{record.blogId,jdbcType=INTEGER},
      </if>
      <if test="record.authorId != null">
        author_id = #{record.authorId,jdbcType=INTEGER},
      </if>
      <if test="record.createOn != null">
        create_on = #{record.createOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.section != null">
        section = #{record.section,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null">
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.visit != null">
        visit = #{record.visit,jdbcType=INTEGER},
      </if>
      <if test="record.draft != null">
        draft = #{record.draft,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.body != null">
        body = #{record.body,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update post
    set id = #{record.id,jdbcType=INTEGER},
      blog_id = #{record.blogId,jdbcType=INTEGER},
      author_id = #{record.authorId,jdbcType=INTEGER},
      create_on = #{record.createOn,jdbcType=TIMESTAMP},
      section = #{record.section,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      visit = #{record.visit,jdbcType=INTEGER},
      draft = #{record.draft,jdbcType=LONGVARCHAR},
      body = #{record.body,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update post
    set id = #{record.id,jdbcType=INTEGER},
      blog_id = #{record.blogId,jdbcType=INTEGER},
      author_id = #{record.authorId,jdbcType=INTEGER},
      create_on = #{record.createOn,jdbcType=TIMESTAMP},
      section = #{record.section,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      visit = #{record.visit,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lakebin.blog.entity.PostWithBLOBs">
    update post
    <set>
      <if test="blogId != null">
        blog_id = #{blogId,jdbcType=INTEGER},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=INTEGER},
      </if>
      <if test="createOn != null">
        create_on = #{createOn,jdbcType=TIMESTAMP},
      </if>
      <if test="section != null">
        section = #{section,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="visit != null">
        visit = #{visit,jdbcType=INTEGER},
      </if>
      <if test="draft != null">
        draft = #{draft,jdbcType=LONGVARCHAR},
      </if>
      <if test="body != null">
        body = #{body,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lakebin.blog.entity.PostWithBLOBs">
    update post
    set blog_id = #{blogId,jdbcType=INTEGER},
      author_id = #{authorId,jdbcType=INTEGER},
      create_on = #{createOn,jdbcType=TIMESTAMP},
      section = #{section,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      visit = #{visit,jdbcType=INTEGER},
      draft = #{draft,jdbcType=LONGVARCHAR},
      body = #{body,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lakebin.blog.entity.Post">
    update post
    set blog_id = #{blogId,jdbcType=INTEGER},
      author_id = #{authorId,jdbcType=INTEGER},
      create_on = #{createOn,jdbcType=TIMESTAMP},
      section = #{section,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      visit = #{visit,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>